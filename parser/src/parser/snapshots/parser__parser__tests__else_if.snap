---
source: parser/src/parser/tests.rs
expression: "(parsed_pretty, pretty_printed_source)"
---
(
    Ok([
        (
            FunctionDef(FunctionDef {
                decl: Normal(NormalDecl {
                    decl_spec: DeclSpec {
                        ty: Integer(IntTy { sign: Signed, kind: Int }),
                        attrs: "(empty)",
                    },
                    init_declarators: [
                        (
                            InitDecl {
                                declarator: Declarator {
                                    decl: WithParams {
                                        ident: (main, 5..9),
                                        params: [],
                                    },
                                    pointer: false,
                                },
                                init: None,
                            },
                            5..9,
                        ),
                    ],
                }),
                body: [
                    (
                        If {
                            cond: (Atom(Int(1)), 22..23),
                            then: [(Expr(Atom(String("a"))), 35..37)],
                            otherwise: Some([
                                (
                                    If {
                                        cond: (Atom(Int(2)), 55..56),
                                        then: [(Expr(Atom(String("b"))), 68..70)],
                                        otherwise: Some([(Expr(Atom(String("c"))), 94..96)]),
                                    },
                                    51..70,
                                ),
                            ]),
                        },
                        18..37,
                    ),
                ],
            }),
            1..106,
        ),
    ]),
    "int main() {\n    if (1) {\n        \"a\"\n    } else {\n        if (2) {\n            \"b\"\n        } else {\n            \"c\"\n        }\n    }\n}\n",
)
